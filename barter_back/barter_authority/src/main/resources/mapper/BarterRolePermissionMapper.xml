<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.barter_authority.mapper.BarterRolePermissionMapper">

    <resultMap type="com.example.barter_authority.domain.entity.BarterRolePermission" id="BarterRolePermissionMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="roleId" column="role_id" jdbcType="VARCHAR"/>
        <result property="permissionId" column="permission_id" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BarterRolePermissionMap">
        select
          id, role_id, permission_id
        from barter_role_permission
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BarterRolePermissionMap">
        select
          id, role_id, permission_id
        from barter_role_permission
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="roleId != null and roleId != ''">
                and role_id = #{roleId}
            </if>
            <if test="permissionId != null and permissionId != ''">
                and permission_id = #{permissionId}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from barter_role_permission
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="roleId != null and roleId != ''">
                and role_id = #{roleId}
            </if>
            <if test="permissionId != null and permissionId != ''">
                and permission_id = #{permissionId}
            </if>
        </where>
    </select>
    <select id="countByPermissionId" resultType="java.lang.Integer">
        select count(1) from barter_role_permission where permission_id = #{permissionId}
    </select>
    <select id="queryPermissionByRoleId" resultType="com.example.barter_authority.domain.entity.BarterPermissionInfo">
        select id,
               name,
               type,
               parent_id,
               path,
               perms,
               component,
               icon,
               orderNum,
               created,
               updated,
               statu
        from barter_permission_info where id in (
            select permission_id
            from barter_role_permission
            where role_id = #{roleId})
    </select>
    <select id="queryPermissionIdByRoleId" resultType="java.lang.Integer">
        select distinct permission_id from barter_role_permission where role_id = #{roleId}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into barter_role_permission(role_id, permission_id)
        values (#{roleId}, #{permissionId})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into barter_role_permission(role_id, permission_id)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.roleId}, #{entity.permissionId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into barter_role_permission(role_id, permission_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleId}, #{entity.permissionId})
        </foreach>
        on duplicate key update
        role_id = values(role_id),
        permission_id = values(permission_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update barter_role_permission
        <set>
            <if test="roleId != null and roleId != ''">
                role_id = #{roleId},
            </if>
            <if test="permissionId != null and permissionId != ''">
                permission_id = #{permissionId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from barter_role_permission where id = #{id}
    </delete>

    <delete id="deleteByItem">
        delete from barter_role_permission where id = #{id}
    </delete>
    <delete id="deleteByRecord">
        delete from barter_role_permission where role_id = #{roleId} and permission_id = #{permissionId}
    </delete>

</mapper>

